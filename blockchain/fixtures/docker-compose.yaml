# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#  CA orderer couchdb peer

version: '2'

volumes:
  orderer.goldenBud.com:
  peer0.org1.goldenBud.com:
  peer1.org1.goldenBud.com:


networks:
  goldenBud:

services:
  ca.org1.goldenBud.com:
    image: hyperledger/fabric-ca:1.4.4
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.org1.goldenBud.com
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org1.goldenBud.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/bb846d5b1ca9cb1d5b1aba903f8c979333b309e76bb9cd8de3437ae507388787_sk
      - FABRIC_CA_SERVER_PORT=7054
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.org1.goldenBud.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/bb846d5b1ca9cb1d5b1aba903f8c979333b309e76bb9cd8de3437ae507388787_sk -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/org1.goldenBud.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca.org1.goldenBud.com
    networks:
      - goldenBud

  orderer.goldenBud.com:
    image: hyperledger/fabric-orderer:1.4.4
    container_name: orderer.goldenBud.com
    environment:
      - FABRIC_LOGGING_SPEC=DEBUG
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer

    volumes:
      - ./artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
      - ./crypto-config/ordererOrganizations/goldenBud.com/orderers/orderer.goldenBud.com/msp:/var/hyperledger/orderer/msp
      - ./crypto-config/ordererOrganizations/goldenBud.com/orderers/orderer.goldenBud.com/tls/:/var/hyperledger/orderer/tls
      - orderer.goldenBud.com:/var/hyperledger/production/orderer
    ports:
      - 7050:7050
    networks:
      - goldenBud

  couchdb0:
    container_name: couchdb0
    image: hyperledger/fabric-couchdb:0.4.18
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "5984:5984"
    networks:
      - goldenBud

  couchdb1:
    container_name: couchdb1
    image: hyperledger/fabric-couchdb:0.4.18
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "6984:5984"
    networks:
      - goldenBud


  peer0.org1.goldenBud.com:
    image: hyperledger/fabric-peer:1.4.4
    container_name: peer0.org1.goldenBud.com
    environment:
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=

      - CORE_PEER_ID=peer0.org1.goldenBud.com
      - CORE_PEER_ADDRESS=peer0.org1.goldenBud.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.org1.goldenBud.com:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org1.goldenBud.com:8051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.goldenBud.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP

      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fixtures_goldenBud
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/org1.goldenBud.com/peers/peer0.org1.goldenBud.com/msp:/etc/hyperledger/fabric/msp
      - ./crypto-config/peerOrganizations/org1.goldenBud.com/peers/peer0.org1.goldenBud.com/tls:/etc/hyperledger/fabric/tls
      - peer0.org1.goldenBud.com:/var/hyperledger/production
    ports:
      - 7051:7051

    depends_on:
      - orderer.goldenBud.com
      - couchdb0
    networks:
      - goldenBud

  peer1.org1.goldenBud.com:
    image: hyperledger/fabric-peer:1.4.4
    container_name: peer1.org1.goldenBud.com
    environment:
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=


      - CORE_PEER_ID=peer1.org1.goldenBud.com
      - CORE_PEER_ADDRESS=peer1.org1.goldenBud.com:8051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:8051
      - CORE_PEER_CHAINCODEADDRESS=peer1.org1.goldenBud.com:8052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:8052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org1.goldenBud.com:8051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org1.goldenBud.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP


      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fixtures_goldenBud

      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/org1.goldenBud.com/peers/peer1.org1.goldenBud.com/msp:/etc/hyperledger/fabric/msp
      - ./crypto-config/peerOrganizations/org1.goldenBud.com/peers/peer1.org1.goldenBud.com/tls:/etc/hyperledger/fabric/tls
      - peer1.org1.goldenBud.com:/var/hyperledger/production


    ports:
      - 8051:8051
    depends_on:
      - orderer.goldenBud.com
      - couchdb1
    networks:
      - goldenBud

